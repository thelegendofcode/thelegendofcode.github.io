{"pageProps":{"article":{"data":{"title":"No index signature with a parameter of type 'string' was found on type '{}'","date":"2022/05/24","series":[],"tags":["typescript"],"categories":[]},"content":"<p><em>TL;DR</em></p>\n<pre><code>  // 1. Cast object as any\n  (object as any)[key] = 'value';\n\n  // 2. Cast as key of object\n  object[key keyof typeof object] = 'value';\n</code></pre>\n<p>This error often pops up when using a string to to index an object.</p>\n<pre><code>const object = {\n  key: value,\n};\n\nconst key = 'key';\n\n// Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ key: string; }'.\n//  No index signature with a parameter of type 'string' was found on type '{ key: string; }'.ts(7053)\nconsole.log(object[key]);\n</code></pre>\n<p>The quick, if somewhat cryptic, explanation is that while <code>object.key</code> is a string, it is specifically a string named 'key'. Where <code>key</code> is just a string. So we need to tell the Typescript compiler than <code>key</code> isn't just any string, but specifically a string with the type of a key of object.</p>\n<pre><code>const key: keyof typeof object = 'key';\n</code></pre>\n"}},"__N_SSG":true}